堆排序和一个二叉树的非递归中序。然后问了jvm，堆栈，线程池参数，数据库索引，B+，Hash。spring mvc

一面：手写了一个冒泡还是选择排序，总之不难。然后问了堆栈，数据库的一些知识。我数据库问的少。不多。还有索引，java的框架，spring mvc这样



一面：
-Java的八大基本类型
-Java除了基本类型以外还有哪些类能表示数字（我也没懂他问是什么）
-介绍JVM堆和栈，有什么用，A a = new A()；各放在哪个位置
-HashMap扩容过程，初始容量，和HashTable的区别
-构造线程的方法
-线程池构造器的参数和作用
-mysql有哪些引擎，区别
（1）：MyISAM存储引擎
不支持事务、也不支持外键，优势是访问速度快，对事务完整性没有 要求或者以select，insert为主的应用基本上可以用这个引擎来创建表
支持3种不同的存储格式，分别是：静态表；动态表；压缩表
静态表：表中的字段都是非变长字段，这样每个记录都是固定长度的，优点存储非常迅速，容易缓存，出现故障容易恢复；缺点是占用的空间通常比动态表多（因为存储时会按照列的宽度定义补足空格）ps：在取数据的时候，默认会把字段后面的空格去掉，如果不注意会把数据本身带的空格也会忽略。
动态表：记录不是固定长度的，这样存储的优点是占用的空间相对较少；缺点：频繁的更新、删除数据容易产生碎片，需要定期执行OPTIMIZE TABLE或者myisamchk-r命令来改善性能
压缩表：因为每个记录是被单独压缩的，所以只有非常小的访问开支

（2）InnoDB存储引擎*
该存储引擎提供了具有提交、回滚和崩溃恢复能力的事务安全。但是对比MyISAM引擎，写的处理效率会差一些，并且会占用更多的磁盘空间以保留数据和索引。 
InnoDB存储引擎的特点：支持自动增长列，支持外键约束

(3)：MEMORY存储引擎
Memory存储引擎使用存在于内存中的内容来创建表。每个memory表只实际对应一个磁盘文件，格式是.frm。memory类型的表访问非常的快，因为它的数据是放在内存中的，并且默认使用HASH索引，但是一旦服务关闭，表中的数据就会丢失掉。 
MEMORY存储引擎的表可以选择使用BTREE索引或者HASH索引，两种不同类型的索引有其不同的使用范围
Hash索引优点： 
Hash 索引结构的特殊性，其检索效率非常高，索引的检索可以一次定位，不像B-Tree 索引需要从根节点到枝节点，最后才能访问到页节点这样多次的IO访问，所以 Hash 索引的查询效率要远高于 B-Tree 索引。 
Hash索引缺点： 那么不精确查找呢，也很明显，因为hash算法是基于等值计算的，所以对于“like”等范围查找hash索引无效，不支持；
Memory类型的存储引擎主要用于哪些内容变化不频繁的代码表，或者作为统计操作的中间结果表，便于高效地对中间结果进行分析并得到最终的统计结果，。对存储引擎为memory的表进行更新操作要谨慎，因为数据并没有实际写入到磁盘中，所以一定要对下次重新启动服务后如何获得这些修改后的数据有所考虑。

（4）MERGE存储引擎
Merge存储引擎是一组MyISAM表的组合，这些MyISAM表必须结构完全相同，merge表本身并没有数据，对merge类型的表可以进行查询，更新，删除操作，这些操作实际上是对内部的MyISAM表进行的。

-mysql优化
 1.SQL语句优化
 2.索引优化
 3.数据库结构优化
 4.服务器硬件优化
-spring IOC的作用，有哪些注解，有什么用
-手写一个快排
暂时只想起这些

二面：
整个二面都在聊项目，过程中面试官问的很细，让我整个项目数据库的表画出来，
讲各表之间的联系，为什么这么设计，然后聊能不能改进等等。我感觉面试官可能对我的项目感兴趣
，二面持续了将近40分钟一直在聊项目，这是三面中体验最好的。
（面试官真的nice，很平易近人的感觉）

电话面试

- RESTful API哪些是幂等的，什么是幂等
 等幂性简单点说就是一次请求和多次请求，资源的状态是一样 GET/DELETE/PUT
- Java GC

- TCP三次握手和四次挥手
SYN=1 seq=x  SYN=1,ACK=1,seq=y,ack=x+1  ACK=1,seq=x+1,ack=y+1

FIN=1,seq=u  ACK=1,seq=v,ack=u+1  FIN=1,ACK=1,seq=w,ack=u+1   ACK=1,seq=u+1,ack=w+1
- MySQL引擎介绍一下

- Spring IoC和AOP介绍一下

- 用过什么注解

- Spring，Spring Boot，Spring Cloud有什么区别
答：Spring Boot简化Spring开发，在配置文件环节省去大量时间和精力
 微服务是当前架构领域的热门话题，要想知道什么是spring-cloud，
麻烦先去弄清楚什么是微服务。 spring-colud是一种云端分布式架构解决方案，
基于spring boot,在spring boot做较少的配置，
便可成为 spring cloud 中的一个微服务。 
说点有点冠冕堂皇了 我也没用过、不过简单理解为：
spring cloud也就是提供了一些常用的分布式组件，
都是应用型的，就根spring mvc差不多。
Spring Boot是 Spring的一套快速配置脚手架,可以基于 Spring Boot快速开发单个微服务, 
SpringCloud是一个基于 Spring Boot实现的云应用开发工具; Spring Boot专注于快速、方便集成的单个微服务个体，
Spring Cloud关注全局的服务治理框架;


一面

- 自我介绍

- Java多态
多态是同一个行为具有多个不同表现形式或形态的能力。
- Java中String，StringBuffer，StringBuilder区别

- Java GC（GC算法，可达性分析）

- 对JVM的了解

- Java死锁（有没有写过相关代码）

- 集合类有什么，HashMap与Hashtable区别（源码具体参数）

- ArrayList初始容量（没记住，回答了ArrayList与Vector扩容）

- 哈希一致性

- Java多线程方式（Thread，Runnable，Callable最好会手写）

- 创建线程池的方法中，传入参数有哪些
newSingleThreadExecutor
创建一个单线程的线程池。这个线程池只有一个线程在工作，也就是相当于单线程串行执行所有任务。如果这个唯一的线程因为异常结束，那么会有一个新的线程来替代它。此线程池保证所有任务的执行顺序按照任务的提交顺序执行。
newFixedThreadPool
创建固定大小的线程池。每次提交一个任务就创建一个线程，直到线程达到线程池的最大大小。线程池的大小一旦达到最大值就会保持不变，如果某个线程因为执行异常而结束，那么线程池会补充一个新线程。
newCachedThreadPool
创建一个可缓存的线程池。如果线程池的大小超过了处理任务所需要的线程，
那么就会回收部分空闲（60秒不执行任务）的线程，当任务数增加时，此线程池又可以智能的添加新线程来处理任务。此线程池不会对线程池大小做限制，线程池大小完全依赖于操作系统（或者说JVM）能够创建的最大线程大小。
newScheduledThreadPool
创建一个大小无限的线程池。此线程池支持定时以及周期性执行任务的需求。
正确的选择队列 核心线程回收 定制工作线程的创建优化
corePoolSize 
maximumPoolSize 
TimeUnit 
workQueue 
threadFactory 
RejectedExecutionHandler

- Java单例模式有哪些，手写线程安全的单例模式

- 手写代码期间问专业

- MySQL怎么做查询优化
SQL语句优化
索引优化

- 最左前缀原则

- 项目中除了加索引还用过什么优化查询的方式

- 排序算法（冒泡，插入，选择，归并，希尔，快排，堆排）

- 解释归并排序原理（手写），是不是稳定的

- 什么是稳定排序

- 说一下冒泡排序原理

- JDBC了解不（可能是问5种事务隔离级别）

- 数据库事务CAID

- RESTful API哪些是幂等的，什么是幂等
多次操作和一次操作最终得到的结果是一致的 GET/PUT/DELETE 
- Spring注解有哪些

- 是否了解微服务


二面

- 自我介绍

- 挑一个最熟悉的Java项目介绍（我说Java时间比较久不太熟悉，说了实习的项目）

- 这个项目中你学到了什么

- Java项目中业务流程

- 是否了解微服务

- 怎么实现的不同用户权限调用（AOP方式对请求进行权限验证）

- 怎么解决用户与服务端保持连接的状态（客户端与服务器时间戳验证）

- 假设你的项目有大量用户访问，并发压力大怎么解决（Nginx，消息队列各种MQ，Kubernetes）

- 消息队列缓解并发但是需要用户等待怎么解决

- Nginx负载均衡导致用户两次调用服务不在一个IP上，怎么保持连接

- MySQL数据量巨大，怎么优化（我答的分库分表，横向和纵向分表）


时间有点久了，有些问题不记得了。
一面
java类加载过程
数据库索引怎么实现的
b树和b+树的区别
画一个b+树
讲一下你知道的java.util.concurrent包下的类
treemap了解吗
使用数组实现一个队列，写java代码

二面
都是项目相关

hr面
看成绩单
保研还是考研
对工作最看重哪些方面
面过哪些公司，有什么offer
性格上的缺点


南京站13号面经
招银一面：
多态实现
生产者消费者手写
SQL查询语句手写
Mybatis批量查询手写
HashMap，HashTable，ConcurrentHashmap区别，底层源码
内存泄漏的情况有哪些
classpath，path的区别
JVM运行过程
GC机制讲一讲 可能还有，记不清了
线程池，阻塞队列
二面：   http ，https区别
分布式dubbo讲一下了解
项目介绍
非对称加密和对称加密
如何设计一个服务器（socket相关）
eclipse、IJ开发快捷键及使用技巧讲几个
如何使得浏览器加载请求可以稳定打到后台而不使用浏览器缓存（请求中加一个随机值参数）
spring事务写在哪一部分，为什么不写在DAO,Controller层
数据库驱动为什么使用反射调用不直接new


成都，9.28下午，java岗，三面下来差不多2h（中间等了不少），现场扫码签到（我看到一帖子说迟到直接不给面了，吓得我赶紧跑，最后迟到了，顺利面试，没有卡人的情况）。

一面：
自我介绍。
String判等。
java集合的类层次关系，各种集合容器简单介绍一下。
给出2个kv实例，描述hashmap.put()过程。
任何自定义类都能放入hashmap吗？有什么要求？如何实现？
常见的索引结构。
mysql主键和其他索引的区别。
谈一谈你对微服务的理解。
Spring的AOP。
拦截器用来做什么？哪些场景需要用拦截器？

什么是java内存泄漏？举几个例子？
答：不再会被使用的对象的内存不能被回收，就是内存泄露
长生命周期的对象持有短生命周期对象的引用就很可能发生内存泄漏，尽管短生命周期对象已经不再需要，但是因为长生命周期持有它的引用而导致不能被回收，这就是Java中内存泄漏的发生场景。具体主要有如下几大类：
1、静态集合类引起内存泄漏：
像HashMap、Vector等的使用最容易出现内存泄露，这些静态变量的生命周期和应用程序一致，他们所引用的所有的对象Object也不能被释放，因为他们也将一直被Vector等引用着。

static方法在哪个内存区域？
方法区
写代码，使2个线程出现死锁情况。

写代码，判断链表是否有环。

集群如何管理session。
答：
1.基于数据库的Session共享
2.基于NFS共享文件系统
3.基于memcached 的session，如何保证 memcached 本身的高可用性？
4.基于resin/tomcat web容器本身的session复制机制
5.基于TT/Redis 或 jbosscache 进行 session 共享。
6.基于cookie 进行session共享

二面：
自我介绍。
聊项目细节，画架构，如何优化，能否重构。。。一大堆。
数据量巨大时，如何分库分表，场景、条件及实现方式。

hr面：
首先是查原件，毕业证、学位证、四六级、成绩单。。貌似招银很看重这个。。。
自我介绍。
简历上的经历询问。
为啥考研。
有啥兴趣爱好？能接受加班吗？手上有offer吗？独生子女吗？爸妈哪儿人?。。。基本就是查户口。
hr：你还有啥问题？
我：工作节奏怎样的？
hr：早上8:30上班，必须到，非弹性制，下午正常是4:30下班，是否加班看项目需求。
我：。。。什么时候给通知？
hr：国庆前后吧。

招银面试整体比较简单，气氛轻松，和hr尬聊，听说福利很好，但貌似也要经常加班，感觉招银的技术也还不错的




java线程的实现方式，用runable实现一下，写出来
blockingqueue实现原理
数据库优化了解那些
dom解析了解那些
设计模式简单说一下
2面
说一下实习的项目
如果有一个很大的表，要删除里面95％的数据该怎么做
日志文件怎么去存储，mysql的存储引擎了解多少

1、自我介绍
2、介绍一下微服务架构（因为研究方向是微服务架构）
3、微服务架构与SOA有什么区别？
4、微服务架构的服务粒度怎么确定，服务怎么通信？
5、java中的乐观锁与悲观锁
6、equals与hashcode的区别，存入集合时的判断过程
7、java的内存模型，什么数据放在什么区域
8、垃圾回收算法，新生代和年老代用的什么算法，为什么用这个算法？
9、数据库事务的隔离级别？

主要是卡着你的项目问，每个都问的很深很深。。所以炸了
1、线程池参数的意义，如何设置线程池参数。线程池调优怎么调优。
2、数据库连接池 最大连接数、最小连接数
3、敏捷开发
4、mybatis的使用 批量插入和分页
5、Class类的意义，以及反射的处理
6、如何在java/spring中创建全局变量
7、java如何做缓存（与redis、memcached无关）
8、系统卡顿应该从哪些方面尽量去查找。（他会让你一直想啊想，简直崩溃想不到）
9、手写LRU实现
10、海量数据查找问题（设计一种数据结构、给的是实际的POI点，所以我创建了是RTree+BTree 面试官好像还比较认可）
11、当Linux中存在很多处于WaitTime连接的是什么情况
12、在生产环境出现BUG一般是怎么解决的？